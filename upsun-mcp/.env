#### Application Configuration ####

# NODE_ENV: Node.js environment mode (development, production, test)
NODE_ENV=development

# TYPE_ENV: Upsun environment type (remote, local)
TYPE_ENV=remote

# PORT: HTTP server port
PORT=3000

# MODE: API operation mode (READONLY, NON_DESTRUCTIVE, WRITABLE)
MODE=READONLY


#### API Configuration ####

# UPSUN_API_TOKEN: API token for accessing Upsun API in stdio mode (currently unused)
# UPSUN_API_TOKEN=<your_api_key_here>

# API_URL: Base URL for the Upsun API
API_URL=https://api.upsun.com


#### OAuth2 Configuration ####

# OAUTH_ENABLED: Enable or disable OAuth2 authentication (true/false)
OAUTH_ENABLED=true

# OAUTH_BASE_URL: Base URL for the local OAuth2 proxy server (used in development mode)
OAUTH_BASE_URL=http://127.0.0.1:${PORT}/

# OAUTH_URL: Base URL for the Upsun OAuth2 authorization server
OAUTH_URL=https://auth.upsun.com

# OAUTH_AUTH_URL: OAuth2 authorization endpoint URL
OAUTH_AUTH_URL=${OAUTH_URL}/oauth2/authorize

# OAUTH_TOKEN_URL: OAuth2 token endpoint URL for exchanging authorization codes for access tokens
OAUTH_TOKEN_URL=${OAUTH_URL}/oauth2/token

# OAUTH_REGISTRATION_URL: OAuth2 dynamic client registration endpoint (optional)
OAUTH_REGISTRATION_URL=${OAUTH_URL}/oauth2/register

# OAUTH_REVOCATION_URL: OAuth2 token revocation endpoint URL
OAUTH_REVOCATION_URL=${OAUTH_URL}/oauth2/revoke

# OAUTH_ISSUER_URL: OAuth2 issuer URL used for token validation
OAUTH_ISSUER_URL=${OAUTH_URL}

# OAUTH_SCOPE: OAuth2 scopes requested during authorization (offline_access enables refresh tokens)
OAUTH_SCOPE=offline_access

# OAUTH_DOC_URL: URL to OAuth2 documentation for user reference
OAUTH_DOC_URL=https://docs.upsun.com/

# OAUTH_CLIENT_ID: OAuth2 client identifier (currently unused - for future dynamic client registration)
# OAUTH_CLIENT_ID=mcp

# OAUTH_CLIENT_SECRET: OAuth2 client secret (currently unused - for future dynamic client registration)
# OAUTH_CLIENT_SECRET=

# MCP_DOMAIN: Domain for MCP server (currently unused)
# MCP_DOMAIN=http://127.0.0.1:3001  # http://mcp.upsun.com

# MCP_DOC: Documentation URL for MCP (currently unused)
# MCP_DOC=http://doc.upsun.com


#### Storage Configuration ####

# TOKEN_STORAGE_STRATEGY: Strategy for storing OAuth2 tokens ('memory' for in-memory, 'redis' for persistent storage)
TOKEN_STORAGE_STRATEGY=memory # 'memory' for in-memory storage; use 'redis' please.

# REDIS_DSN: Redis connection string (only used when TOKEN_STORAGE_STRATEGY=redis)
REDIS_DSN=redis://127.0.0.1:6379

# DEBUG: Debug namespace for Express.js logging (e.g., 'express:*' for all Express logs)
DEBUG=express:*


#### OpenTelemetry Configuration ####

# OTEL_ENABLED: Enable or disable OpenTelemetry distributed tracing (true/false)
OTEL_ENABLED=true

# OTEL_SAMPLING_RATE: Sampling rate for traces (0.0 to 1.0)
# Development: 1.0 (100% of traces)
# Production: 0.1 (10% of traces)
OTEL_SAMPLING_RATE=0.1

# OTEL_EXPORTER_TYPE: Exporter type for traces (console, otlp, or none)
# console: logs traces to console (useful for development)
# otlp: sends traces to an OTLP-compatible endpoint
# none: disables exporting (tracing still active but not exported)
OTEL_EXPORTER_TYPE=console

# OTEL_EXPORTER_ENDPOINT: OTLP exporter endpoint URL (only used when OTEL_EXPORTER_TYPE=otlp)
# Example: http://localhost:4318/v1/traces (Jaeger)
# Example: https://otlp-gateway-prod-eu-west-0.grafana.net/otlp/v1/traces (Grafana Cloud)
OTEL_EXPORTER_ENDPOINT=http://localhost:4318/v1/traces

# OTEL_EXPORTER_HEADERS: Custom headers for OTLP exporter (only used when OTEL_EXPORTER_TYPE=otlp)
# Format: key1=value1,key2=value2
# Example for Grafana Cloud: Authorization=Basic <base64_token>
# Example for Honeycomb: x-honeycomb-team=<api_key>
OTEL_EXPORTER_HEADERS=

# OTEL_EXPORTER_TIMEOUT: OTLP exporter timeout in milliseconds (default: 10000)
OTEL_EXPORTER_TIMEOUT=10000

# OTEL_SERVICE_NAME: Service name identifier for OpenTelemetry traces
OTEL_SERVICE_NAME=upsun-mcp-server

# OTEL_SERVICE_NAMESPACE: Service namespace for grouping related services (optional)
OTEL_SERVICE_NAMESPACE=ai

# OTEL_SERVICE_INSTANCE_ID: Unique instance identifier (optional, auto-generated if not provided)
OTEL_SERVICE_INSTANCE_ID=
