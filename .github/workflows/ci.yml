name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop, direct_oauth2 ]
  pull_request:
    branches: [ main, develop ]

env:
  # Define the primary Node.js version for release, build, coverage uploads and badge generation
  PRIMARY_NODE_VERSION: '26.x'

jobs:
  test:
    name: Test and Coverage
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        # Node.js versions to test [Maintenance LTS, Active LTS, Current]
        node-version: ['20.x', '22.x', '24.x']

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: upsun-mcp/package-lock.json
        
    - name: Install dependencies
      run: |
        cd upsun-mcp
        npm ci
        
    - name: Run TypeScript compilation
      run: |
        cd upsun-mcp
        npm run build
        
    - name: Run tests with coverage
      run: |
        cd upsun-mcp
        npm run test:coverage:ci
        
    - name: Upload coverage reports to Codecov
      if: matrix.node-version == env.PRIMARY_NODE_VERSION
      uses: codecov/codecov-action@v4
      with:
        file: ./upsun-mcp/coverage/lcov.info
        directory: ./upsun-mcp/coverage/
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
        verbose: true
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        
    - name: Upload coverage to Coveralls
      if: matrix.node-version == env.PRIMARY_NODE_VERSION
      uses: coverallsapp/github-action@v2
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        path-to-lcov: ./upsun-mcp/coverage/lcov.info
        base-path: ./upsun-mcp
        flag-name: Unit
        
    - name: Comment PR with coverage
      if: matrix.node-version == env.PRIMARY_NODE_VERSION && github.event_name == 'pull_request'
      uses: romeovs/lcov-reporter-action@v0.3.1
      with:
        lcov-file: ./upsun-mcp/coverage/lcov.info
        github-token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Archive coverage artifacts
      if: matrix.node-version == env.PRIMARY_NODE_VERSION
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: |
          upsun-mcp/coverage/
          !upsun-mcp/coverage/**/*.tmp
        retention-days: 30

  quality:
    if: false
    name: Code Quality
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.PRIMARY_NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: upsun-mcp/package-lock.json
        
    - name: Install dependencies
      run: |
        cd upsun-mcp
        npm ci
        
    - name: Download coverage artifacts
      uses: actions/download-artifact@v4
      with:
        name: coverage-report
        path: upsun-mcp/coverage/
        
    - name: Check coverage thresholds
      run: |
        cd upsun-mcp
        npm run coverage:check
        
    - name: Generate coverage badge
      if: github.ref == 'refs/heads/main'
      run: |
        cd upsun-mcp
        COVERAGE=$(cat coverage/coverage-summary.json | jq -r '.total.lines.pct')
        echo "Coverage: ${COVERAGE}%"
        if (( $(echo "$COVERAGE >= 80" | bc -l) )); then
          COLOR="brightgreen"
        elif (( $(echo "$COVERAGE >= 60" | bc -l) )); then
          COLOR="yellow"
        else
          COLOR="red"
        fi
        curl -s "https://img.shields.io/badge/coverage-${COVERAGE}%25-${COLOR}" > coverage-badge.svg

  build:
    if: false
    name: Build
    runs-on: ubuntu-latest
    needs: [test, quality]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.PRIMARY_NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: upsun-mcp/package-lock.json
        
    - name: Install dependencies
      run: |
        cd upsun-mcp
        npm ci
        
    - name: Build project
      run: |
        cd upsun-mcp
        npm run build
        
    - name: Archive build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-files
        path: upsun-mcp/build/
        retention-days: 7
